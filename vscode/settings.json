{
  "editor.lineNumbers": "relative",
  "editor.cursorStyle": "line",
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  "editor.formatOnSave": true,
  // "workbench.colorTheme": "Default Dark+",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // vim settings
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-d>": true,
    "<C-s>": false,
    "<C-z>": false,
    // "g": false
  },
  "vim.insertModeKeyBindings": [],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        "editor.action.addSelectionToNextFindMatch"
      ]
    },
    // {
    //   "before": [
    //     "<space>",
    //     "g",
    //     "g"
    //   ],
    //   "commands": [
    //     {
    //       "command": "workbench.action.terminal.newWithProfile",
    //       "args": {
    //         "profileName": "lazygit",
    //         "splitActiveTerminal": false,
    //         "location": {
    //           "viewColumn": -2
    //         }
    //       },
    //     }
    //   ],
    // },
  ],
  // "vim.normalModeKeyBindingsNonRecursive": [],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
    {
      "before": [
        "<C-n>"
      ],
      "commands": [
        "editor.action.addSelectionToNextFindMatch"
      ]
    },
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": [
        ">"
      ],
      "commands": [
        "editor.action.indentLines"
      ]
    },
    {
      "before": [
        "<"
      ],
      "commands": [
        "editor.action.outdentLines"
      ]
    },
  ],
  "makefile.configureOnOpen": false,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  // "[javascript]": {
  //   "editor.defaultFormatter": "biomejs.biome"
  // },
  // "[typescript]": {
  //   "editor.defaultFormatter": "biomejs.biome"
  // },
  // "[typescriptreact]": {
  //   "editor.defaultFormatter": "biomejs.biome"
  // },
  // By default, VS Code will only switch to the Debug Console when you start
  // debugging the first time in a session. This setting tells VS Code to always
  // switch to the Debug Console when starting a session, so you can see the
  // programs output.
  "debug.internalConsoleOptions": "openOnSessionStart",
  "[dart]": {
    "editor.defaultFormatter": "Dart-Code.dart-code",
    // Automatically format code on save and during typing of certain characters
    // (like `;` and `}`).
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "always"
    },
    // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
    "editor.rulers": [
      80
    ],
    // Disables built-in highlighting of words that match your selection. Without
    // this, all instances of the selected text will be highlighted, interfering
    // with Dart's ability to highlight only exact references to the selected variable.
    "editor.selectionHighlight": false,
    // Allows pressing <TAB> to complete snippets such as `for` even when the
    // completion list is not visible.
    "editor.tabCompletion": "onlySnippets",
    // By default, VS Code will populate code completion with words found in the
    // matching documents when a language service does not provide its own completions.
    // This results in code completion suggesting words when editing comments and
    // strings. This setting will prevent that.
    "editor.wordBasedSuggestions": "off",
  },
  // "[python]": {
  //   "editor.defaultFormatter": "charliermarsh.ruff",
  //   "editor.formatOnSave": true,
  //   "editor.codeActionsOnSave": {
  //     "source.fixAll": "explicit",
  //     "source.organizeImports": "explicit",
  //   },
  // },
  // "extensions.ignoreRecommendations": true,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.typeCheckingMode": "standard",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.indexing": true,
  "git.openRepositoryInParentFolders": "never",
  "windsurf.autocompleteSpeed": "fast",
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "windsurf.autoExecutionPolicy": "off",
}