## SHORTCUTS
# Leader: C-a
#
## Panes
# <leader>-     = split vertically
# <leader>|     = split horizontally
# exit or Ctrl+d = close window/pane
# meta-<arrow>  = move to pane up/down/left/rigth
# ctrl-<arrow>  = move to pane up/down/left/right
# <leader>z     = toggle pane to full screen
# <leader>x     = close current pane
#
## Windows
# <leader>c       = new window
# <leader>n       = next window
# <leader>p       = previous window
# <leader><number> = window at number 1-9
# <leader>,       = rename window
#
## Session
# tmux ls                         = lists all sessions
# tmux attach                     = attach to last session
# tmux attach -t <id>             = attach to session number/name
# tmux new -s <name>              = new session with name 
# tmux rename-session -t 0 <name> = rename session 0
# tmux kill-session -t <name|number> = kills the target session
# <leader>$
# <leader>d                       = detach from session
# <leader>w                       = session and window preview
# <leader>(                       = move to prev session 
# <leader>)                       = move to next session
# <leader>[                       = move to pane prev
# <leader>]                       = move to pane next
#
## Others
# <leader>:       = enter command mode
# tmux list-keys  = help
# tmux info
# :list-keys
#
# Other references
# https://tmuxcheatsheet.com/

# remap prefix from default `C-b` -> `C-a`
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# start with window 1 (instead of 0)
set -g base-index 1
# start with pane 1 (instead of 0)
set -g pane-base-index 1

# split panes using - and |
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# open new windows in the current path
bind c new-window -c "#{pane_current_path}"

# reload config file with `r`
bind r source-file ~/.tmux.conf

# switch panes without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# vi mode keys
set-window-option -g mode-keys vi

# prev/next windows
unbind p
bind p previous-window

# shorten command delay
set -sg escape-time 1

# Enable mouse control (clickable windows/panes, resizable panes)
set -g mouse on

# Stop renaming windows automatically
# use , to rename window
set-option -g allow-rename off

# Design tweaks
# set default terminal mode to 256 colors
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# modes
setw -g clock-mode-color colour1
setw -g mode-style 'fg=colour0 bg=colour1 bold'

# panes
set -g pane-border-style 'fg=colour1'
set -g pane-active-border-style 'fg=colour3'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=colour1'
set -g status-left ''
set -g status-right '%Y-%m-%d %H:%M '
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour0 bg=colour1 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour1 dim'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]#F '

setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour0 bold'


## Plugins

# vim navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
